// Generated by view binder compiler. Do not edit!
package com.comp490.fridgemate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.comp490.fridgemate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecipeDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final Button editButton;

  @NonNull
  public final ImageView imageViewFavoritedMain;

  @NonNull
  public final ImageView imageViewMealImage;

  @NonNull
  public final RecyclerView recyclerMealIngredients;

  @NonNull
  public final RecyclerView recyclerMealInstructions;

  @NonNull
  public final RecyclerView recyclerMealSimilar;

  @NonNull
  public final TextView similarRecipeLabel;

  @NonNull
  public final TextView textViewMealName;

  @NonNull
  public final TextView textViewMealServings;

  @NonNull
  public final TextView textViewMealSource;

  private ActivityRecipeDetailsBinding(@NonNull LinearLayout rootView, @NonNull Button deleteButton,
      @NonNull Button editButton, @NonNull ImageView imageViewFavoritedMain,
      @NonNull ImageView imageViewMealImage, @NonNull RecyclerView recyclerMealIngredients,
      @NonNull RecyclerView recyclerMealInstructions, @NonNull RecyclerView recyclerMealSimilar,
      @NonNull TextView similarRecipeLabel, @NonNull TextView textViewMealName,
      @NonNull TextView textViewMealServings, @NonNull TextView textViewMealSource) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.editButton = editButton;
    this.imageViewFavoritedMain = imageViewFavoritedMain;
    this.imageViewMealImage = imageViewMealImage;
    this.recyclerMealIngredients = recyclerMealIngredients;
    this.recyclerMealInstructions = recyclerMealInstructions;
    this.recyclerMealSimilar = recyclerMealSimilar;
    this.similarRecipeLabel = similarRecipeLabel;
    this.textViewMealName = textViewMealName;
    this.textViewMealServings = textViewMealServings;
    this.textViewMealSource = textViewMealSource;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecipeDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecipeDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recipe_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecipeDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_button;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.edit_button;
      Button editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.imageView_favorited_main;
      ImageView imageViewFavoritedMain = ViewBindings.findChildViewById(rootView, id);
      if (imageViewFavoritedMain == null) {
        break missingId;
      }

      id = R.id.imageView_meal_image;
      ImageView imageViewMealImage = ViewBindings.findChildViewById(rootView, id);
      if (imageViewMealImage == null) {
        break missingId;
      }

      id = R.id.recycler_meal_ingredients;
      RecyclerView recyclerMealIngredients = ViewBindings.findChildViewById(rootView, id);
      if (recyclerMealIngredients == null) {
        break missingId;
      }

      id = R.id.recycler_meal_instructions;
      RecyclerView recyclerMealInstructions = ViewBindings.findChildViewById(rootView, id);
      if (recyclerMealInstructions == null) {
        break missingId;
      }

      id = R.id.recycler_meal_similar;
      RecyclerView recyclerMealSimilar = ViewBindings.findChildViewById(rootView, id);
      if (recyclerMealSimilar == null) {
        break missingId;
      }

      id = R.id.similar_recipe_label;
      TextView similarRecipeLabel = ViewBindings.findChildViewById(rootView, id);
      if (similarRecipeLabel == null) {
        break missingId;
      }

      id = R.id.textView_meal_name;
      TextView textViewMealName = ViewBindings.findChildViewById(rootView, id);
      if (textViewMealName == null) {
        break missingId;
      }

      id = R.id.textView_meal_servings;
      TextView textViewMealServings = ViewBindings.findChildViewById(rootView, id);
      if (textViewMealServings == null) {
        break missingId;
      }

      id = R.id.textView_meal_source;
      TextView textViewMealSource = ViewBindings.findChildViewById(rootView, id);
      if (textViewMealSource == null) {
        break missingId;
      }

      return new ActivityRecipeDetailsBinding((LinearLayout) rootView, deleteButton, editButton,
          imageViewFavoritedMain, imageViewMealImage, recyclerMealIngredients,
          recyclerMealInstructions, recyclerMealSimilar, similarRecipeLabel, textViewMealName,
          textViewMealServings, textViewMealSource);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.comp490.fridgemate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.comp490.fridgemate.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TextRecognitionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ShapeableImageView imageIv;

  @NonNull
  public final MaterialButton inputImageBtn;

  @NonNull
  public final MaterialButton recognizeTextBtn;

  @NonNull
  public final EditText recognizedTextEt;

  private TextRecognitionBinding(@NonNull LinearLayout rootView,
      @NonNull ShapeableImageView imageIv, @NonNull MaterialButton inputImageBtn,
      @NonNull MaterialButton recognizeTextBtn, @NonNull EditText recognizedTextEt) {
    this.rootView = rootView;
    this.imageIv = imageIv;
    this.inputImageBtn = inputImageBtn;
    this.recognizeTextBtn = recognizeTextBtn;
    this.recognizedTextEt = recognizedTextEt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TextRecognitionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TextRecognitionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.text_recognition, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TextRecognitionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageIv;
      ShapeableImageView imageIv = ViewBindings.findChildViewById(rootView, id);
      if (imageIv == null) {
        break missingId;
      }

      id = R.id.inputImageBtn;
      MaterialButton inputImageBtn = ViewBindings.findChildViewById(rootView, id);
      if (inputImageBtn == null) {
        break missingId;
      }

      id = R.id.recognizeTextBtn;
      MaterialButton recognizeTextBtn = ViewBindings.findChildViewById(rootView, id);
      if (recognizeTextBtn == null) {
        break missingId;
      }

      id = R.id.recognizedTextEt;
      EditText recognizedTextEt = ViewBindings.findChildViewById(rootView, id);
      if (recognizedTextEt == null) {
        break missingId;
      }

      return new TextRecognitionBinding((LinearLayout) rootView, imageIv, inputImageBtn,
          recognizeTextBtn, recognizedTextEt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
